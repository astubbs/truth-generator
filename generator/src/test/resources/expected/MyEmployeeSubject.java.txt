package io.stubbs.truth.generator.testModel;
import io.stubbs.truth.generator.testModel.MyEmployeeParentSubject;
import io.stubbs.truth.generator.UserManagedMiddleSubject;
import com.google.common.truth.FailureMetadata;
import io.stubbs.truth.generator.UserManagedSubject;
import io.stubbs.truth.generator.testModel.MyEmployee;
import io.stubbs.truth.generator.SubjectFactoryMethod;
import javax.annotation.processing.Generated;
/**
 * Main Subject for the class under test. If you want, this is where would add
 * your custom assertion methods.
 *
 * <p>
 * Optionally move this class into source control, and add your custom
 * assertions here.
 *
 * <p>
 * If the system detects this class already exists, it won't attempt to generate
 * a new one. Note that if the base skeleton of this class ever changes, you
 * won't automatically get it updated.
 *
 * @see MyEmployee
 * @see MyEmployeeParentSubject
 * @see MyEmployeeChildSubject
 */
@UserManagedSubject(MyEmployee.class)
@Generated(value = "io.stubbs.truth.generator.internal.TruthGenerator", date = "1970-01-01T00:00:00Z")
public class MyEmployeeSubject extends MyEmployeeParentSubject implements UserManagedMiddleSubject {
	protected MyEmployeeSubject(FailureMetadata failureMetadata,
			io.stubbs.truth.generator.testModel.MyEmployee actual) {
		super(failureMetadata, actual);
	}
	/**
	 * Returns an assertion builder for a {@link MyEmployee} class.
	 */
	@SubjectFactoryMethod
	public static Factory<MyEmployeeSubject, MyEmployee> myEmployees() {
		return MyEmployeeSubject::new;
	}
}
