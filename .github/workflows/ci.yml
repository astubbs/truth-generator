name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: "JDK ${{ matrix.java }}"
    strategy:
      matrix:
        java: [ 17, 18 ]
    runs-on: ubuntu-latest
    steps:
      # Cancel any previous runs for the same branch that are still running.
      - name: 'Cancel previous runs'
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Cache local Maven repository'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          server-id: sonatype-nexus-snapshots
          server-username: CI_DEPLOY_USERNAME
          server-password: CI_DEPLOY_PASSWORD
      - name: 'Install'
        shell: bash
        run: mvn -B -P!standard-with-extra-repos install -U -DskipTests=true
      - name: 'Test'
        shell: bash
        run: mvn -B -P!standard-with-extra-repos verify -U -Dmaven.javadoc.skip=true

  publish_snapshot_package_cloud:
    name: 'Publish snapshot to Package Cloud'
    needs: test
    if: github.event_name == 'push' && github.repository == 'astubbs/truth-generator'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Cache local Maven repository'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-
      #            setup maven settings.xml
      - name: 'Set up Maven settings.xml for Package Cloud'
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'
          server-id: package-cloud
          server-password: PACKAGE_CLOUD_TOKEN
      - name: Publish package
        run: mvn --batch-mode deploy -DskipTests=true
        env:
          PACKAGE_CLOUD_TOKEN: ${{ secrets.PACKAGE_CLOUD_TOKEN }}

  # https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven
  publish_snapshot_github:
    name: 'Publish snapshot to GitHub Packages'
    needs: test
    if: github.event_name == 'push' && github.repository == 'astubbs/truth-generator'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Cache local Maven repository'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-
      #            setup maven settings.xml
      - name: 'Set up Maven settings.xml for GitHub'
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'
          server-id: github
          server-username: GITHUB_TOKEN
      - name: Publish package
        run: mvn --batch-mode deploy -DskipTests=true -Pgithub-deploy -P!package-cloud-deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #          As settings.xml gets merged by the tool, we have to include bindings to all variables present - as added above
          PACKAGE_CLOUD_TOKEN: ${{ secrets.PACKAGE_CLOUD_TOKEN }}

#  generate_docs:
#    name: 'Generate latest docs'
#    needs: test
#    if: github.event_name == 'push' && github.repository == 'astubbs/truth-generator'
#    runs-on: ubuntu-latest
#    steps:
#      - name: 'Check out repository'
#        uses: actions/checkout@v3
#      - name: 'Cache local Maven repository'
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            maven-
#      - name: 'Set up JDK 11'
#        uses: actions/setup-java@v2
#        with:
#          java-version: 11
#          distribution: 'zulu'
#      - name: 'Generate latest docs'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./util/generate-latest-docs.sh
