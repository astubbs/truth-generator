name: Truth Generator Release
on:
  workflow_dispatch:
    inputs:
#       branch:
#         description: "The branch to checkout when cutting the release."
#         required: true
#         default: "master"
#       releaseVersion:
#         description: "Default version to use when preparing a release."
#         required: true
#         default: ""
#       developmentVersion:
#         description: "Default version to use for new local working copy."
#         required: true
#         default: ""

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.inputs.branch }}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Make a release
        uses: qcastel/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk/
        with:
          release-branch-name: "release"

          # to enable releasing, add the profile for deployment e.g. -Ppackage-cloud-deploy
          maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Pci-release"

          # leading zero until 1.0 is released, to use the auto versioning
#           maven-release-version-number: ${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}
#           maven-development-version-number: ${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.\${parsedVersion.incrementalVersion}-SNAPSHOT

#           maven-release-version-number: ${{ github.event.inputs.releaseVersion }}
#           maven-development-version-number: ${{ github.event.inputs.developmentVersion }}-SNAPSHOT

          access-token: ${{ secrets.GITHUB_TOKEN }} # https
          # ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # ssh - not used
